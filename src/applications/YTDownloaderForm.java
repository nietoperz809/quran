package applications;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import misc.MDIChild;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Administrator on 7/25/2016.
 */
public class YTDownloaderForm extends MDIChild
{
    private JTextField urlIn;
    private JTextField pathIn;
    private JPanel mainPanel;
    private JToggleButton toggleButt;

    public YTDownloaderForm ()
    {
        super();
        this.setContentPane(mainPanel);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("YT Downloader");
        setSize(400, 110);
        setVisible(true);
        toggleButt.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed (ActionEvent e)
            {
                if (toggleButt.isSelected())
                {
                    toggleButt.setText("STOP");
                    toggleButt.setBackground(Color.GREEN);

                }
                else
                {
                    toggleButt.setText("GO");
                    toggleButt.setBackground(Color.RED);
                }
                //repaint();
            }
        });
    }

    public static void main (String[] args)
    {
        //new YTDownloaderForm();
//        JFrame frame = new JFrame("YTDownloaderForm");
//        frame.setContentPane(new YTDownloaderForm().mainPanel);
//        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//        frame.setSize(400, 110);
//        frame.setVisible(true);
    }

    @Override
    public void initAfterDeserialization ()
    {

    }

    private void createUIComponents ()
    {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ ()
    {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:d:grow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        mainPanel.setMinimumSize(new Dimension(100, 142));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 20, label1.getFont());
        if (label1Font != null)
        {
            label1.setFont(label1Font);
        }
        label1.setText("Url:");
        CellConstraints cc = new CellConstraints();
        mainPanel.add(label1, cc.xy(1, 1));
        urlIn = new JTextField();
        urlIn.setMinimumSize(new Dimension(100, 31));
        urlIn.setPreferredSize(new Dimension(400, 31));
        mainPanel.add(urlIn, cc.xy(3, 1));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, -1, 20, label2.getFont());
        if (label2Font != null)
        {
            label2.setFont(label2Font);
        }
        label2.setText("Path:");
        mainPanel.add(label2, cc.xy(5, 1));
        pathIn = new JTextField();
        pathIn.setMinimumSize(new Dimension(50, 31));
        pathIn.setPreferredSize(new Dimension(400, 31));
        mainPanel.add(pathIn, cc.xy(7, 1));
        toggleButt = new JToggleButton();
        toggleButt.setBackground(new Color(-1700082));
        toggleButt.setDoubleBuffered(true);
        toggleButt.setLabel("GO");
        toggleButt.setMargin(new Insets(0, 0, 0, 0));
        toggleButt.setMaximumSize(new Dimension(500, 40));
        toggleButt.setMinimumSize(new Dimension(37, 40));
        toggleButt.setOpaque(true);
        toggleButt.setPreferredSize(new Dimension(140, 40));
        mainPanel.add(toggleButt, cc.xy(3, 3));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$ (String fontName, int style, int size, Font currentFont)
    {
        if (currentFont == null)
        {
            return null;
        }
        String resultName;
        if (fontName == null)
        {
            resultName = currentFont.getName();
        }
        else
        {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1'))
            {
                resultName = fontName;
            }
            else
            {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$ ()
    {
        return mainPanel;
    }

    //    public static void main (String[] args) throws MalformedURLException
//    {
//        String url = "https://www.youtube.com/watch?v=TPzIWRsbNwE";
//        String path = "c:\\test\\";
//        VGet v = new VGet(new URL(url), new File(path));
//        v.download();
//    }
}
