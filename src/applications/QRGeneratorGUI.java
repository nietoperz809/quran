/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applications;

import java.awt.*;
import javax.swing.*;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import misc.MDIChild;
import misc.PixelCanvas;
import misc.Tools;

/**
 *
 * @author Administrator
 */
public class QRGeneratorGUI extends MDIChild implements ActionListener
{
    private BufferedImage _img = null;
    
    /**
     * Object initializer
     */
    {
        initComponents();
    }
    
    /**
     * Creates new form QRGeneratorGUI
     */
    public QRGeneratorGUI()
    {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - unknown
    private void initComponents() {
        jPanel1 = new JPanel();
        makeButton = new JButton();
        jScrollPane1 = new JScrollPane();
        inputField = new JTextArea();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton7 = new JButton();
        sizeField = new JTextField();
        jLabel1 = new JLabel();
        canvas = new misc.QuadraticPixelCanvas();

        //======== this ========
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("QR Maker");
        Container contentPane = getContentPane();
        contentPane.setLayout(new BorderLayout());

        //======== jPanel1 ========
        {

            // JFormDesigner evaluation mark
            jPanel1.setBorder(new javax.swing.border.CompoundBorder(
                new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
                    "JFormDesigner Evaluation", javax.swing.border.TitledBorder.CENTER,
                    javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    java.awt.Color.red), jPanel1.getBorder())); jPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener(){public void propertyChange(java.beans.PropertyChangeEvent e){if("border".equals(e.getPropertyName()))throw new RuntimeException();}});

            jPanel1.setLayout(null);

            //---- makeButton ----
            makeButton.setText("Make!");
            makeButton.addActionListener(e -> makeButtonActionPerformed(e));
            jPanel1.add(makeButton);
            makeButton.setBounds(new Rectangle(new Point(18, 7), makeButton.getPreferredSize()));

            //======== jScrollPane1 ========
            {

                //---- inputField ----
                inputField.setColumns(20);
                inputField.setRows(5);
                jScrollPane1.setViewportView(inputField);
            }
            jPanel1.add(jScrollPane1);
            jScrollPane1.setBounds(100, 0, 462, jScrollPane1.getPreferredSize().height);

            //---- jButton1 ----
            jButton1.setText("To Clip");
            jButton1.addActionListener(e -> jButton1ActionPerformed(e));
            jPanel1.add(jButton1);
            jButton1.setBounds(new Rectangle(new Point(18, 39), jButton1.getPreferredSize()));

            //---- jButton2 ----
            jButton2.setText("Tweet");
            jButton2.addActionListener(e -> jButton2ActionPerformed(e));
            jPanel1.add(jButton2);
            jButton2.setBounds(new Rectangle(new Point(18, 71), jButton2.getPreferredSize()));

            //---- jButton7 ----
            jButton7.setText("Save");
            jButton7.addActionListener(e -> jButton7ActionPerformed(e));
            jPanel1.add(jButton7);
            jButton7.setBounds(20, 110, 80, jButton7.getPreferredSize().height);

            //---- sizeField ----
            sizeField.setText("200");
            jPanel1.add(sizeField);
            sizeField.setBounds(180, 110, 50, sizeField.getPreferredSize().height);

            //---- jLabel1 ----
            jLabel1.setText("---- SIZE --->");
            jPanel1.add(jLabel1);
            jLabel1.setBounds(100, 110, 80, jLabel1.getPreferredSize().height);

            { // compute preferred size
                Dimension preferredSize = new Dimension();
                for(int i = 0; i < jPanel1.getComponentCount(); i++) {
                    Rectangle bounds = jPanel1.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = jPanel1.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                jPanel1.setMinimumSize(preferredSize);
                jPanel1.setPreferredSize(preferredSize);
            }
        }
        contentPane.add(jPanel1, BorderLayout.NORTH);

        //======== canvas ========
        {
            canvas.setLayout(null);

            { // compute preferred size
                Dimension preferredSize = new Dimension();
                for(int i = 0; i < canvas.getComponentCount(); i++) {
                    Rectangle bounds = canvas.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = canvas.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                canvas.setMinimumSize(preferredSize);
                canvas.setPreferredSize(preferredSize);
            }
        }
        contentPane.add(canvas, BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private boolean render()
    {
        try
        {
            String txt = inputField.getText();
            if (txt.isEmpty())
                return false;
            final int x = 800;
            final int y = 800;
            QRCodeWriter w = new QRCodeWriter();
            BitMatrix m = w.encode(txt, BarcodeFormat.QR_CODE, x, y);
            _img = new BufferedImage(x, y, BufferedImage.TYPE_INT_RGB);
            _img.createGraphics();
            Graphics2D graphics = (Graphics2D) _img.getGraphics();
            graphics.setColor(Color.WHITE);
            graphics.fillRect(0, 0, x, y);
            graphics.setColor(Color.BLACK);

            for (int i = 0; i < x; i++)
            {
                for (int j = 0; j < y; j++)
                {
                    if (m.get(i, j))
                    {
                        graphics.fillRect(i, j, 1, 1);
                    }
                }
            }
            ((PixelCanvas)canvas).setImage(_img);
        }
        catch (NumberFormatException | WriterException exception)
        {
            System.out.println(exception);
            return false;
        }    
        return true;
    }
    
    private void makeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_makeButtonActionPerformed
    {//GEN-HEADEREND:event_makeButtonActionPerformed
        if (render())
        {
            canvas.invalidate();
            canvas.repaint();
        }
    }//GEN-LAST:event_makeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        ((PixelCanvas)canvas).toClipboard();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        ((PixelCanvas)canvas).tweet("hello");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton7ActionPerformed
    {//GEN-HEADEREND:event_jButton7ActionPerformed
        int newsize = Integer.parseInt(sizeField.getText());
        BufferedImage img2 = Tools.resizeImage(_img, newsize, newsize);
        Tools.saveImage(img2, false);
    }//GEN-LAST:event_jButton7ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - unknown
    private JPanel jPanel1;
    private JButton makeButton;
    private JScrollPane jScrollPane1;
    private JTextArea inputField;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton7;
    private JTextField sizeField;
    private JLabel jLabel1;
    private JPanel canvas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initAfterDeserialization()
    {
        //
    }

    @Override
    public void actionPerformed (ActionEvent e)
    {

    }
}
