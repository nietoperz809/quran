/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applications;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JSpinner;
import magnify.MagnifyPanel;

/**
 *
 * @author Administrator
 */
public class MagnifyGUI extends javax.swing.JInternalFrame
{

    /**
     * Creates new form MagnifyGUI
     */
    public MagnifyGUI()
    {
        initComponents();
        spinX.setUI(new NewSpinUI(spinX));
        spinY.setUI(new NewSpinUI(spinY));
    }

    class NewSpinUI extends javax.swing.plaf.basic.BasicSpinnerUI
    {
        private final JSpinner target;

        public NewSpinUI(JSpinner tg)
        {
            super();
            target = tg;
        }

        private void doIt()
        {
            Rectangle r = MagnifyGUI.this.getBounds();
            if (target == spinX)
            {
                r.width = (Integer) MagnifyGUI.this.spinX.getValue();
            }
            else
            {
                r.height = (Integer) MagnifyGUI.this.spinY.getValue();
            }
            MagnifyGUI.this.setBounds(r);
        }

        @Override
        protected JComponent createEditor()
        {
            JSpinner.DefaultEditor comp = (JSpinner.DefaultEditor) super.createEditor();
            JFormattedTextField tf = comp.getTextField();
            tf.addKeyListener(new KeyAdapter()
            {
                @Override
                public void keyPressed(final KeyEvent e)
                {
                    try
                    {
                        target.commitEdit();
                    }
                    catch (ParseException ex)
                    {
                        Logger.getLogger(MagnifyGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    doIt();
                    //System.out.println("enter pressed");
                }
            });
            return comp;
        }

        @Override
        protected Component createNextButton()
        {
            JButton btnUp = (JButton) super.createNextButton();
            btnUp.addActionListener((ActionEvent ae) ->
            {
                doIt();
            });
            return btnUp;
        }

        @Override
        protected Component createPreviousButton()
        {
            JButton btnDown = (JButton) super.createPreviousButton();
            btnDown.addActionListener((ActionEvent ae) ->
            {
                doIt();
            });
            return btnDown;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        spinX = new javax.swing.JSpinner();
        spinY = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();
        checkHide = new javax.swing.JCheckBox();
        autoSaveText = new javax.swing.JTextField();
        magnifyPanel = new magnify.MagnifyPanel(this);

        setClosable(true);
        setResizable(true);
        setTitle("Magnifier");
        setName(""); // NOI18N
        setVisible(true);
        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentResized(java.awt.event.ComponentEvent evt)
            {
                formComponentResized(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 255, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(394, 60));

        jButton1.setFont(new java.awt.Font("Lucida Console", 0, 8)); // NOI18N
        jButton1.setText("toClpBrd");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Sans", 0, 8)); // NOI18N
        jButton2.setText("Tweet");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Lucida Sans", 0, 8)); // NOI18N
        jButton3.setText("Save->");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        checkHide.setText("Hide all");

        autoSaveText.setToolTipText("autoSavePath (empty = autoave off)");
        autoSaveText.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                autoSaveTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                autoSaveTextFocusLost(evt);
            }
        });
        autoSaveText.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                autoSaveTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinX, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinY, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(checkHide)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(autoSaveText, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spinY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spinX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(checkHide)
                    .addComponent(autoSaveText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        javax.swing.GroupLayout magnifyPanelLayout = new javax.swing.GroupLayout(magnifyPanel);
        magnifyPanel.setLayout(magnifyPanelLayout);
        magnifyPanelLayout.setHorizontalGroup(
            magnifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 576, Short.MAX_VALUE)
        );
        magnifyPanelLayout.setVerticalGroup(
            magnifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        getContentPane().add(magnifyPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        ((MagnifyPanel) magnifyPanel).toClipboard(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        ((MagnifyPanel) magnifyPanel).tweet();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentResized
    {//GEN-HEADEREND:event_formComponentResized
        Dimension d = evt.getComponent().getSize();
        spinX.setValue(d.width);
        spinY.setValue(d.height);
    }//GEN-LAST:event_formComponentResized

    // Save
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        ((MagnifyPanel) magnifyPanel).save();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void autoSaveTextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_autoSaveTextActionPerformed
    {//GEN-HEADEREND:event_autoSaveTextActionPerformed
        autoSaveChanged = true;
        checkHide.requestFocus(); // Move Focus away
    }//GEN-LAST:event_autoSaveTextActionPerformed

    private void autoSaveTextFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_autoSaveTextFocusGained
    {//GEN-HEADEREND:event_autoSaveTextFocusGained
        autoSaveText.setBackground(Color.pink);
        autoSaveText.repaint();
    }//GEN-LAST:event_autoSaveTextFocusGained

    private void autoSaveTextFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_autoSaveTextFocusLost
    {//GEN-HEADEREND:event_autoSaveTextFocusLost
        autoSaveText.setBackground(Color.white);
        autoSaveText.repaint();
    }//GEN-LAST:event_autoSaveTextFocusLost

    public String getAutosavePath()
    {
        String txt = autoSaveText.getText();
        if (txt.isEmpty())
            return null;
        return txt;
    }
    
    public boolean isAutoSaveChanged()
    {
        boolean b = autoSaveChanged;
        autoSaveChanged = false;
        return b;
    }
    
    public boolean getHideMode()
    {
        return checkHide.isSelected();
    }

    private boolean autoSaveChanged;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField autoSaveText;
    private javax.swing.JCheckBox checkHide;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel magnifyPanel;
    private javax.swing.JSpinner spinX;
    private javax.swing.JSpinner spinY;
    // End of variables declaration//GEN-END:variables
}
