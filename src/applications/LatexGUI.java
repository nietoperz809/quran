/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applications;

import java.awt.*;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.*;
import javax.swing.JLabel;
import misc.MainWindow;
import misc.MDIChild;
import misc.PixelCanvas;
import misc.Tools;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;

/**
 *
 * @author Administrator
 */
public class LatexGUI extends MDIChild implements ActionListener
{
    /**
     * Object initializer
     */
    {
        initComponents();
    }
    
    /**
     * Creates new form LatexGUI
     */
    public LatexGUI()
    {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - unknown
    private void initComponents() {
        jPanel1 = new JPanel();
        jScrollPane1 = new JScrollPane();
        textArea = new JTextArea();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();
        jButton7 = new JButton();
        saveName = new JTextField();
        canvas = new misc.PixelCanvas();

        //======== this ========
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("LaTEX");
        setToolTipText("");
        setName("");
        Container contentPane = getContentPane();
        contentPane.setLayout(new BorderLayout());

        //======== jPanel1 ========
        {

            // JFormDesigner evaluation mark
            jPanel1.setBorder(new javax.swing.border.CompoundBorder(
                new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
                    "JFormDesigner Evaluation", javax.swing.border.TitledBorder.CENTER,
                    javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    java.awt.Color.red), jPanel1.getBorder())); jPanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener(){public void propertyChange(java.beans.PropertyChangeEvent e){if("border".equals(e.getPropertyName()))throw new RuntimeException();}});

            jPanel1.setLayout(null);

            //======== jScrollPane1 ========
            {

                //---- textArea ----
                textArea.setColumns(20);
                textArea.setRows(5);
                jScrollPane1.setViewportView(textArea);
            }
            jPanel1.add(jScrollPane1);
            jScrollPane1.setBounds(0, 0, 630, 90);

            //---- jButton1 ----
            jButton1.setText("Render");
            jButton1.addActionListener(e -> jButton1ActionPerformed(e));
            jPanel1.add(jButton1);
            jButton1.setBounds(new Rectangle(new Point(10, 100), jButton1.getPreferredSize()));

            //---- jButton2 ----
            jButton2.setText("to Clipboard");
            jButton2.addActionListener(e -> jButton2ActionPerformed(e));
            jPanel1.add(jButton2);
            jButton2.setBounds(new Rectangle(new Point(100, 100), jButton2.getPreferredSize()));

            //---- jButton3 ----
            jButton3.setText("Tweet");
            jButton3.addActionListener(e -> jButton3ActionPerformed(e));
            jPanel1.add(jButton3);
            jButton3.setBounds(new Rectangle(new Point(210, 100), jButton3.getPreferredSize()));

            //---- jButton7 ----
            jButton7.setText("Save as -->");
            jButton7.addActionListener(e -> jButton7ActionPerformed(e));
            jPanel1.add(jButton7);
            jButton7.setBounds(310, 100, 115, jButton7.getPreferredSize().height);

            //---- saveName ----
            saveName.setText("LaTEX");
            jPanel1.add(saveName);
            saveName.setBounds(430, 100, 192, saveName.getPreferredSize().height);

            { // compute preferred size
                Dimension preferredSize = new Dimension();
                for(int i = 0; i < jPanel1.getComponentCount(); i++) {
                    Rectangle bounds = jPanel1.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = jPanel1.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                jPanel1.setMinimumSize(preferredSize);
                jPanel1.setPreferredSize(preferredSize);
            }
        }
        contentPane.add(jPanel1, BorderLayout.NORTH);

        //======== canvas ========
        {
            canvas.setName("");
            canvas.setLayout(null);

            { // compute preferred size
                Dimension preferredSize = new Dimension();
                for(int i = 0; i < canvas.getComponentCount(); i++) {
                    Rectangle bounds = canvas.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = canvas.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                canvas.setMinimumSize(preferredSize);
                canvas.setPreferredSize(preferredSize);
            }
        }
        contentPane.add(canvas, BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton7ActionPerformed
    {//GEN-HEADEREND:event_jButton7ActionPerformed
        try
        {
            Tools.serialize(saveName.getText(), this);
            MainWindow.getInstance().initSavesMenu();
        }
        catch (Exception ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        ((PixelCanvas)canvas).tweet ("test");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        ((PixelCanvas)canvas).toClipboard();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        render();
        invalidate();
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void render()
    {
        try
        {
            // get the text
            String latex = textArea.getText();

            // create a formula
            TeXFormula formula = new TeXFormula(latex);

            // render the formla to an icon of the same size as the formula.
            TeXIcon icon = formula
                    .createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);

            // insert a border 
            icon.setInsets(new Insets(5, 5, 5, 5));

            // now create an actual image of the rendered equation
            BufferedImage img = new BufferedImage(icon.getIconWidth(),
                    icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
            ((PixelCanvas)canvas).setImage (img);
            Graphics2D g2 = img.createGraphics();
            g2.setColor(Color.WHITE);
            g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
            
            JLabel jl = new JLabel();
            jl.setForeground (Color.BLACK);
            icon.paintIcon(jl, g2, 0, 0);
			// at this point the image is created, you could also save it with ImageIO
        }
        catch (Exception ex)
        {
            System.out.println (ex);
        }
    }
    
/*
     \sum_{n=0}^m10^n*a_{n}
     \\---\\
     \sum_{n=0}^m10^n*a_{m-n-1}
*/    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - unknown
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JTextArea textArea;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton7;
    private JTextField saveName;
    private JPanel canvas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initAfterDeserialization()
    {
        //
    }

    @Override
    public void actionPerformed (ActionEvent e)
    {

    }
}
