/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applications;

import chargen.Chargen;
import misc.*;
import turtle.TurtleWindow;
import twitter.TwitTools;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;

/**
 *
 * @author Administrator
 */
public class C64TextGUI extends MDIChild implements ActionListener
{
    private transient TurtleWindow bitmapView = null;

    /**
     * Initializer
     */
    {
        initComponents();
    }
    
    /**
     * Creates new form C64TextGUI
     */
    public C64TextGUI()
    {
    }

    private void createView (int x, int y)
    {
        if (bitmapView == null)
        {
            bitmapView = new TurtleWindow(x, y);
            MainWindow.getInstance().addChild(bitmapView);
        }
    }
    
    private void removeView()
    {
        if (bitmapView != null)
        {
            MainWindow.getInstance().remove(bitmapView);
            bitmapView.dispose();
            bitmapView = null;
        }
    }

    private void setBmpSize()
    {
        float f;
        try
        {
            f = Float.parseFloat(scaleText.getText());
        }
        catch (Exception ex)
        {
            f = 1;
        }
        bitmapView.getTurtle().scale(f);
        bitmapView.sizeChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();

        inputText = new javax.swing.JTextArea();
        inputText.addKeyListener(new KeyListener()
        {
            @Override
            public void keyTyped (KeyEvent e)
            {

            }

            @Override
            public void keyPressed (KeyEvent e)
            {

            }

            @Override
            public void keyReleased (KeyEvent e)
            {
                doRendering(null);
            }
        });

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        renderButton = new javax.swing.JButton();

        bkColButton = new javax.swing.JButton();
        fgColButton = new javax.swing.JButton();
        clipBoardButton = new javax.swing.JButton();
        tweetButton = new javax.swing.JButton();
        checkCentered = new javax.swing.JCheckBox();
        checkRight = new javax.swing.JCheckBox();

        scaleText = new javax.swing.JTextField();
        scaleText.addKeyListener(new KeyListener()
        {
            @Override
            public void keyTyped (KeyEvent e)
            {
            }

            @Override
            public void keyPressed (KeyEvent e)
            {

            }

            @Override
            public void keyReleased (KeyEvent e)
            {
                setBmpSize();
            }
        });

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("C64Font");
        setMinimumSize(new java.awt.Dimension(550, 38));
        setPreferredSize(new java.awt.Dimension(499, 284));
        setVisible(true);

        inputText.setColumns(20);
        inputText.setRows(5);
        inputText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(inputText);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(491, 50));
        jPanel1.setLayout(null);

        renderButton.setText("Render");
        renderButton.addActionListener(this);
        jPanel1.add(renderButton);
        renderButton.setBounds(10, 0, 75, 20);

        bkColButton.setBackground(Color.BLACK);
        bkColButton.setToolTipText("Background");
        bkColButton.addActionListener(this);
        jPanel1.add(bkColButton);
        bkColButton.setBounds(361, -2, 50, 25);

        fgColButton.setBackground(Color.white);
        fgColButton.setToolTipText("Foreground");
        fgColButton.addActionListener(this);
        jPanel1.add(fgColButton);
        fgColButton.setBounds(420, -2, 50, 25);

        clipBoardButton.setText("To Clip");
        clipBoardButton.addActionListener(this);
        jPanel1.add(clipBoardButton);
        clipBoardButton.setBounds(10, 30, 90, 20);

        tweetButton.setText("Tweet");
        tweetButton.addActionListener(this);
        jPanel1.add(tweetButton);
        tweetButton.setBounds(250, 0, 71, 25);

        scaleText.setText("1");
        jPanel1.add(scaleText);
        scaleText.setBounds(230, 30, 40, 22);
        scaleText.setToolTipText("Size Multiplier");

        checkCentered.setText("centered");
        jPanel1.add(checkCentered);
        checkCentered.setBounds(111, 0, 110, 25);

        checkRight.setText("right");
        jPanel1.add(checkRight);
        checkRight.setBounds(110, 20, 91, 25);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt)
    {
        if (evt.getSource() == renderButton)
        {
            C64TextGUI.this.doRendering(evt);
        }
        else if (evt.getSource() == bkColButton)
        {
            Color c = JColorChooser.showDialog(null,
                    "Background", null);
            bkColButton.setBackground(c);
            doRendering(null);
        }
        else if (evt.getSource() == fgColButton)
        {
            Color c = JColorChooser.showDialog(null,
                    "Foreground", null);
            fgColButton.setBackground(c);
            doRendering(null);
        }
        else if (evt.getSource() == clipBoardButton)
        {
            new ClipboardImage (bitmapView.getTurtle().getResizedImage());
        }
        else if (evt.getSource() == tweetButton)
        {
            C64TextGUI.this.sendToTwitter(evt);
        }
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Render Button
     * @param evt 
     */
    private void doRendering (java.awt.event.ActionEvent evt)
    {
        String txt = inputText.getText();
        txt = TextTools.replaceUmlaut(txt);
        TextTools tt = new TextTools(txt);
        Dimension d = tt.getImageDimension();
        
        if (checkCentered.isSelected())
            txt = tt.getCenteredText();
        if (checkRight.isSelected())
            txt = tt.getRightText();
                
        removeView();

        Color bk = bkColButton.getBackground();
        Color fg = fgColButton.getBackground();

        createView (d.width, d.height);

        bitmapView.setBkColor(bk);

        new Chargen(bk, fg).printImg (bitmapView.getTurtle().getImage(), txt, 5, 5);
        setBmpSize();
    }
    

    private void sendToTwitter (java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        if (bitmapView == null)
        {
            return;
        }

        BufferedImage img = bitmapView.getTurtle().getImage();
        try
        {
            TwitTools.get().send(img, "TwitTools");
        }
        catch (Exception ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkCentered;
    private javax.swing.JCheckBox checkRight;
    private javax.swing.JTextArea inputText;
    private javax.swing.JButton renderButton;
    private javax.swing.JButton clipBoardButton;
    private javax.swing.JButton tweetButton;
    private javax.swing.JButton bkColButton;
    private javax.swing.JButton fgColButton;
    private javax.swing.JTextField scaleText;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initAfterDeserialization()
    {
        // Nix
    }
}
